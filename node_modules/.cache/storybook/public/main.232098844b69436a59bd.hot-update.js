webpackHotUpdate("main",{

/***/ "./node_modules/vue-docgen-loader/lib/index.js?!./node_modules/@storybook/vue/node_modules/ts-loader/index.js?!./node_modules/vue-loader/lib/index.js?!./src/components/MyButton.vue?vue&type=script&lang=ts&":
/*!*****************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-docgen-loader/lib??ref--13!./node_modules/@storybook/vue/node_modules/ts-loader??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./src/components/MyButton.vue?vue&type=script&lang=ts& ***!
  \*****************************************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/*! exports used: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var _vue_composition_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vue/composition-api */ "./node_modules/@vue/composition-api/dist/vue-composition-api.module.js");

/* harmony default export */ __webpack_exports__["a"] = (Object(_vue_composition_api__WEBPACK_IMPORTED_MODULE_0__[/* createComponent */ "a"])({
    name: 'my-button',
    setup: (props, context) => {
        const onClick = () => {
            console.log('clicked!');
            context.emit('click');
        };
        return {
            onClick
        };
    }
}));


/***/ }),

/***/ "./src/stories/modal.stories.js":
/*!**************************************!*\
  !*** ./src/stories/modal.stories.js ***!
  \**************************************/
/*! exports provided: default, iconModal, iconModalMdType */
/*! all exports used */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "iconModal", function() { return iconModal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "iconModalMdType", function() { return iconModalMdType; });
/* harmony import */ var _vue_composition_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vue/composition-api */ "./node_modules/@vue/composition-api/dist/vue-composition-api.module.js");
/* harmony import */ var _storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @storybook/addon-knobs */ "./node_modules/@storybook/addon-knobs/dist/index.js");
/* harmony import */ var _storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__);
!(function webpackMissingModule() { var e = new Error("Cannot find module '@/feedbacks/modals/icon-modal/PIconModal.vue'"); e.code = 'MODULE_NOT_FOUND'; throw e; }());
!(function webpackMissingModule() { var e = new Error("Cannot find module '@/inputs/buttons/button/PButton.vue'"); e.code = 'MODULE_NOT_FOUND'; throw e; }());
/* eslint-disable */
// @ts-nocheck
// @ts-ignore
var __STORY__ = "import { reactive, toRefs } from '@vue/composition-api';\n\nimport { withKnobs } from '@storybook/addon-knobs';\n\nimport PIconModal from '@/feedbacks/modals/icon-modal/PIconModal.vue';\nimport PButton from '@/inputs/buttons/button/PButton.vue';\n\nexport default {\n    title: 'Feedbacks/Modals/Icon Modal',\n    component: PIconModal,\n    decorators: [withKnobs],\n    parameters: {\n        centered: { disable: true },\n        design: {\n            type: 'figma',\n            url: 'https://www.figma.com/file/wq4wSowBcADBuUrMEZLz6i/SpaceONE-Console-Design?node-id=5973%3A130841',\n        },\n    },\n};\n\nexport const iconModal = () => ({\n    components: { PIconModal, PButton },\n    template: `\n        <div>\n            <p-button styleType=\"primary\" @click=\"onClickOpen\">Open Modal</p-button>\n            <p-icon-modal\n                :visible.sync=\"loading\"\n                :icon-name=\"iconName\"\n                :header-title=\"headerTitle\"\n                :header-desc=\"headerDesc\"\n                :button-text=\"buttonText\"\n                @clickButton=\"onClickCancel\"\n            />\n        </div>`,\n    props: {\n        iconName: {\n            default: 'ic_dashboard',\n        },\n        headerTitle: {\n            default: 'Loading...',\n        },\n        headerDesc: {\n            default: 'Please wait around 10 seconds!',\n        },\n        buttonText: {\n            default: 'Cancel',\n        },\n    },\n    setup() {\n        const state = reactive({\n            loading: false,\n        });\n\n        const onClickOpen = () => {\n            state.loading = true;\n        };\n        const onClickCancel = () => {\n            state.loading = false;\n        };\n\n        return {\n            ...toRefs(state),\n            onClickOpen,\n            onClickCancel,\n        };\n    },\n});\n\nexport const iconModalMdType = () => ({\n    components: { PIconModal, PButton },\n    template: `\n        <div>\n            <p-button styleType=\"primary\" @click=\"onClickOpen\">Open Modal</p-button>\n            <p-icon-modal\n                :visible.sync=\"loading\"\n                :icon-name=\"iconName\"\n                :header-title=\"headerTitle\"\n                :button-text=\"buttonText\"\n                size=\"md\"\n                @clickButton=\"onClickCancel\"\n            >\n                <template #body>\n                    Content\n                </template>\n            </p-icon-modal>\n        </div>`,\n    props: {\n        iconName: {\n            default: 'ic_dashboard',\n        },\n        headerTitle: {\n            default: 'Loading...',\n        },\n        buttonText: {\n            default: 'Cancel',\n        },\n    },\n    setup() {\n        const state = reactive({\n            loading: false,\n        });\n\n        const onClickOpen = () => {\n            state.loading = true;\n        };\n        const onClickCancel = () => {\n            state.loading = false;\n        };\n\n        return {\n            ...toRefs(state),\n            onClickOpen,\n            onClickCancel,\n        };\n    },\n});"; // @ts-ignore

var __LOCATIONS_MAP__ = {
  "iconModal": {
    "startLoc": {
      "col": 25,
      "line": 21
    },
    "endLoc": {
      "col": 2,
      "line": 67
    },
    "startBody": {
      "col": 25,
      "line": 21
    },
    "endBody": {
      "col": 2,
      "line": 67
    }
  },
  "iconModalMdType": {
    "startLoc": {
      "col": 31,
      "line": 69
    },
    "endLoc": {
      "col": 2,
      "line": 116
    },
    "startBody": {
      "col": 31,
      "line": 69
    },
    "endBody": {
      "col": 2,
      "line": 116
    }
  }
};




/* harmony default export */ __webpack_exports__["default"] = ({
  title: 'Feedbacks/Modals/Icon Modal',
  component: !(function webpackMissingModule() { var e = new Error("Cannot find module '@/feedbacks/modals/icon-modal/PIconModal.vue'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()),
  decorators: [_storybook_addon_knobs__WEBPACK_IMPORTED_MODULE_1__["withKnobs"]],
  parameters: {
    centered: {
      disable: true
    },
    design: {
      type: 'figma',
      url: 'https://www.figma.com/file/wq4wSowBcADBuUrMEZLz6i/SpaceONE-Console-Design?node-id=5973%3A130841'
    }
  }
});
var iconModal = function () {
  return {
    components: {
      PIconModal: !(function webpackMissingModule() { var e = new Error("Cannot find module '@/feedbacks/modals/icon-modal/PIconModal.vue'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()),
      PButton: !(function webpackMissingModule() { var e = new Error("Cannot find module '@/inputs/buttons/button/PButton.vue'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())
    },
    template: `
        <div>
            <p-button styleType="primary" @click="onClickOpen">Open Modal</p-button>
            <p-icon-modal
                :visible.sync="loading"
                :icon-name="iconName"
                :header-title="headerTitle"
                :header-desc="headerDesc"
                :button-text="buttonText"
                @clickButton="onClickCancel"
            />
        </div>`,
    props: {
      iconName: {
        default: 'ic_dashboard'
      },
      headerTitle: {
        default: 'Loading...'
      },
      headerDesc: {
        default: 'Please wait around 10 seconds!'
      },
      buttonText: {
        default: 'Cancel'
      }
    },
    setup: function () {
      var state = Object(_vue_composition_api__WEBPACK_IMPORTED_MODULE_0__[/* reactive */ "b"])({
        loading: false
      });

      var onClickOpen = function () {
        state.loading = true;
      };

      var onClickCancel = function () {
        state.loading = false;
      };

      return Object.assign({}, Object(_vue_composition_api__WEBPACK_IMPORTED_MODULE_0__[/* toRefs */ "c"])(state), {
        onClickOpen: onClickOpen,
        onClickCancel: onClickCancel
      });
    }
  };
};
;
var iconModalMdType = function () {
  return {
    components: {
      PIconModal: !(function webpackMissingModule() { var e = new Error("Cannot find module '@/feedbacks/modals/icon-modal/PIconModal.vue'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()),
      PButton: !(function webpackMissingModule() { var e = new Error("Cannot find module '@/inputs/buttons/button/PButton.vue'"); e.code = 'MODULE_NOT_FOUND'; throw e; }())
    },
    template: `
        <div>
            <p-button styleType="primary" @click="onClickOpen">Open Modal</p-button>
            <p-icon-modal
                :visible.sync="loading"
                :icon-name="iconName"
                :header-title="headerTitle"
                :button-text="buttonText"
                size="md"
                @clickButton="onClickCancel"
            >
                <template #body>
                    Content
                </template>
            </p-icon-modal>
        </div>`,
    props: {
      iconName: {
        default: 'ic_dashboard'
      },
      headerTitle: {
        default: 'Loading...'
      },
      buttonText: {
        default: 'Cancel'
      }
    },
    setup: function () {
      var state = Object(_vue_composition_api__WEBPACK_IMPORTED_MODULE_0__[/* reactive */ "b"])({
        loading: false
      });

      var onClickOpen = function () {
        state.loading = true;
      };

      var onClickCancel = function () {
        state.loading = false;
      };

      return Object.assign({}, Object(_vue_composition_api__WEBPACK_IMPORTED_MODULE_0__[/* toRefs */ "c"])(state), {
        onClickOpen: onClickOpen,
        onClickCancel: onClickCancel
      });
    }
  };
};
iconModal.parameters = Object.assign({
  storySource: {
    source: "() => ({\n    components: { PIconModal, PButton },\n    template: `\n        <div>\n            <p-button styleType=\"primary\" @click=\"onClickOpen\">Open Modal</p-button>\n            <p-icon-modal\n                :visible.sync=\"loading\"\n                :icon-name=\"iconName\"\n                :header-title=\"headerTitle\"\n                :header-desc=\"headerDesc\"\n                :button-text=\"buttonText\"\n                @clickButton=\"onClickCancel\"\n            />\n        </div>`,\n    props: {\n        iconName: {\n            default: 'ic_dashboard',\n        },\n        headerTitle: {\n            default: 'Loading...',\n        },\n        headerDesc: {\n            default: 'Please wait around 10 seconds!',\n        },\n        buttonText: {\n            default: 'Cancel',\n        },\n    },\n    setup() {\n        const state = reactive({\n            loading: false,\n        });\n\n        const onClickOpen = () => {\n            state.loading = true;\n        };\n        const onClickCancel = () => {\n            state.loading = false;\n        };\n\n        return {\n            ...toRefs(state),\n            onClickOpen,\n            onClickCancel,\n        };\n    },\n})"
  }
}, iconModal.parameters);
iconModalMdType.parameters = Object.assign({
  storySource: {
    source: "() => ({\n    components: { PIconModal, PButton },\n    template: `\n        <div>\n            <p-button styleType=\"primary\" @click=\"onClickOpen\">Open Modal</p-button>\n            <p-icon-modal\n                :visible.sync=\"loading\"\n                :icon-name=\"iconName\"\n                :header-title=\"headerTitle\"\n                :button-text=\"buttonText\"\n                size=\"md\"\n                @clickButton=\"onClickCancel\"\n            >\n                <template #body>\n                    Content\n                </template>\n            </p-icon-modal>\n        </div>`,\n    props: {\n        iconName: {\n            default: 'ic_dashboard',\n        },\n        headerTitle: {\n            default: 'Loading...',\n        },\n        buttonText: {\n            default: 'Cancel',\n        },\n    },\n    setup() {\n        const state = reactive({\n            loading: false,\n        });\n\n        const onClickOpen = () => {\n            state.loading = true;\n        };\n        const onClickCancel = () => {\n            state.loading = false;\n        };\n\n        return {\n            ...toRefs(state),\n            onClickOpen,\n            onClickCancel,\n        };\n    },\n})"
  }
}, iconModalMdType.parameters);

/***/ })

})
//# sourceMappingURL=main.232098844b69436a59bd.hot-update.js.map