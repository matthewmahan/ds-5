{"version":3,"file":"main.5fdfb9f438cea9ce8789.hot-update.js","sources":["webpack:///modal.vue","webpack:///./src/stories/modal.vue?b001","webpack:///./src/stories/modal.vue"],"sourcesContent":["<template>\n  <SbPortal\n    ref=\"portalRef\"\n    slim\n    append\n    unmount-on-destroy\n    target-slim\n    :target=\"modalTarget\"\n  >\n    <SbBlokUi v-if=\"open\" :style=\"computedBlokUiStyle\" @mousedown=\"wrapClose\">\n      <div\n        ref=\"modal\"\n        class=\"sb-modal\"\n        :class=\"computedClasses\"\n        role=\"dialog\"\n        :style=\"computedStyle\"\n        v-bind=\"{ ...$attrs }\"\n      >\n        <SbModalCloseButton v-if=\"showClose\" />\n        <slot />\n      </div>\n    </SbBlokUi>\n  </SbPortal>\n</template>\n\n<script>\nimport SbBlokUi from '../BlockUI'\nimport SbPortal from '../Portal'\nimport { randomString } from '../../utils'\n\nimport SbModalCloseButton from './components/SbModalCloseButton'\n\nexport default {\n  name: 'SbModal',\n\n  components: {\n    SbPortal,\n    SbBlokUi,\n    SbModalCloseButton,\n  },\n\n  provide() {\n    return {\n      modalContext: () => this.modalContext,\n    }\n  },\n\n  props: {\n    closeOnHeader: Boolean,\n    isOpen: {\n      type: Boolean,\n      default: false,\n    },\n    escCloses: {\n      type: Boolean,\n      default: true,\n    },\n    fullWidth: Boolean,\n    scrollbar: Boolean,\n    large: Boolean,\n    maxWidth: {\n      type: [String, Number],\n      default: null,\n    },\n    modalTarget: {\n      type: String,\n      default: () => `#sb-modal-target-${randomString(4)}`,\n    },\n    overlayPosition: {\n      type: String,\n      default: 'fixed',\n    },\n    overlayTransparent: {\n      type: Boolean,\n      default: false,\n    },\n    customClass: {\n      type: String,\n      default: '',\n    },\n    showClose: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  data() {\n    return {\n      open: false || this.isOpen,\n    }\n  },\n\n  computed: {\n    computedClasses() {\n      return [\n        this.customClass?.length && this.customClass,\n        this.fullWidth && 'sb-modal__full-width',\n        this.large && 'sb-modal__large',\n        this.scrollbar && 'sb-modal--scrollbar',\n        this.closeOnHeader && 'sb-modal--close-on-header',\n      ]\n    },\n\n    computedBlokUiStyle() {\n      const style = { position: this.overlayPosition }\n\n      if (this.overlayTransparent) style.background = 'none'\n\n      return { ...style }\n    },\n\n    computedStyle() {\n      if (!this.maxWidth) return null\n\n      return { maxWidth: `${this.maxWidth}px` }\n    },\n\n    modalContext() {\n      return {\n        closeModal: this.handleCloseModal,\n      }\n    },\n  },\n\n  watch: {\n    isOpen(value) {\n      if (value) {\n        this.handleOpenModal()\n      } else {\n        this.handleCloseModal()\n      }\n    },\n  },\n\n  created() {\n    this.$_createPortalInstance()\n  },\n\n  methods: {\n    escapeEventListener(e) {\n      if (e.key === 'Escape') {\n        this.handleCloseModal()\n      }\n    },\n\n    removeListener() {\n      window.removeEventListener('keydown', this.escapeEventListener)\n    },\n\n    registerListener() {\n      window.addEventListener('keydown', this.escapeEventListener)\n    },\n    /**\n     * handler for closing the modal by pressing ESC on the keyboard\n     */\n    handleCloseModalByPressingEsc() {\n      if (this.escCloses) {\n        this.registerListener()\n      }\n    },\n    /**\n     * handler for close modal\n     */\n    handleCloseModal() {\n      if (this.open && this.escCloses) {\n        this.removeListener()\n        this.open = false\n        this.$nextTick(() => {\n          document.querySelector('body').style.overflow = 'auto'\n          this.$emit('hide')\n        })\n      }\n    },\n\n    /**\n     * handler for open modal\n     */\n    handleOpenModal() {\n      if (!this.open) {\n        this.handleCloseModalByPressingEsc()\n        this.open = true\n        this.$nextTick(() => {\n          document.querySelector('body').style.overflow = 'hidden'\n          this.$emit('show')\n        })\n      }\n    },\n\n    /**\n     * this function allows to hide the overflow\n     */\n    hideOverflow() {\n      document.querySelector('body').style.overflow = 'hidden'\n    },\n\n    wrapClose(event) {\n      if (this.$refs.modal && !this.$refs.modal.contains(event.target)) {\n        this.handleCloseModal(event)\n      }\n    },\n\n    /**\n     * function to create the portal instance\n     */\n    $_createPortalInstance() {\n      if (this.$refs.portalRef) {\n        this.$refs.portalRef.mountTarget()\n      }\n    },\n  },\n}\n</script>\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"SbPortal\",\n    {\n      ref: \"portalRef\",\n      attrs: {\n        slim: \"\",\n        append: \"\",\n        \"unmount-on-destroy\": \"\",\n        \"target-slim\": \"\",\n        target: _vm.modalTarget\n      }\n    },\n    [\n      _vm.open\n        ? _c(\n            \"SbBlokUi\",\n            {\n              style: _vm.computedBlokUiStyle,\n              on: { mousedown: _vm.wrapClose }\n            },\n            [\n              _c(\n                \"div\",\n                _vm._b(\n                  {\n                    ref: \"modal\",\n                    staticClass: \"sb-modal\",\n                    class: _vm.computedClasses,\n                    style: _vm.computedStyle,\n                    attrs: { role: \"dialog\" }\n                  },\n                  \"div\",\n                  Object.assign({}, _vm.$attrs),\n                  false\n                ),\n                [\n                  _vm.showClose ? _c(\"SbModalCloseButton\") : _vm._e(),\n                  _vm._v(\" \"),\n                  _vm._t(\"default\")\n                ],\n                2\n              )\n            ]\n          )\n        : _vm._e()\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./modal.vue?vue&type=template&id=e1fd3b30&\"\nimport script from \"./modal.vue?vue&type=script&lang=js&\"\nexport * from \"./modal.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/mattmahan/Desktop/ds-5/ds5/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('e1fd3b30')) {\n      api.createRecord('e1fd3b30', component.options)\n    } else {\n      api.reload('e1fd3b30', component.options)\n    }\n    module.hot.accept(\"./modal.vue?vue&type=template&id=e1fd3b30&\", function () {\n      api.rerender('e1fd3b30', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/stories/modal.vue\"\nconst __vuedocgen_export_0 = component.exports;\nexport default __vuedocgen_export_0;\n__vuedocgen_export_0.__docgenInfo = {\"displayName\":\"SbModal\",\"exportName\":\"default\",\"description\":\"\",\"tags\":{},\"props\":[{\"name\":\"closeOnHeader\",\"type\":{\"name\":\"boolean\"}},{\"name\":\"isOpen\",\"type\":{\"name\":\"boolean\"},\"defaultValue\":{\"func\":false,\"value\":\"false\"}},{\"name\":\"escCloses\",\"type\":{\"name\":\"boolean\"},\"defaultValue\":{\"func\":false,\"value\":\"true\"}},{\"name\":\"fullWidth\",\"type\":{\"name\":\"boolean\"}},{\"name\":\"scrollbar\",\"type\":{\"name\":\"boolean\"}},{\"name\":\"large\",\"type\":{\"name\":\"boolean\"}},{\"name\":\"maxWidth\",\"type\":{\"name\":\"string|number\"},\"defaultValue\":{\"func\":false,\"value\":\"null\"}},{\"name\":\"modalTarget\",\"type\":{\"name\":\"string\"},\"defaultValue\":{\"func\":true,\"value\":\"() => `#sb-modal-target-${randomString(4)}`\"}},{\"name\":\"overlayPosition\",\"type\":{\"name\":\"string\"},\"defaultValue\":{\"func\":false,\"value\":\"'fixed'\"}},{\"name\":\"overlayTransparent\",\"type\":{\"name\":\"boolean\"},\"defaultValue\":{\"func\":false,\"value\":\"false\"}},{\"name\":\"customClass\",\"type\":{\"name\":\"string\"},\"defaultValue\":{\"func\":false,\"value\":\"''\"}},{\"name\":\"showClose\",\"type\":{\"name\":\"boolean\"},\"defaultValue\":{\"func\":false,\"value\":\"true\"}}],\"events\":[{\"name\":\"hide\"},{\"name\":\"show\"}],\"slots\":[{\"name\":\"default\"}]}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AADA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAjCA;AAuCA;AACA;AACA;AADA;AAGA;AAEA;AACA;AAAA;AACA;AAAA;AAOA;AAEA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AADA;AAGA;AA7BA;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtEA;AA1GA;;;;;;;;;;;;;AChCA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvDA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}